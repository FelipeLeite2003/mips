.data
prompt: .asciiz "Digite o valor de n: "
result: .asciiz "O termo da sequencia de Fibonacci eh: "
result2: .asciiz "A razao aurea entre os termos 41 e 30 eh: "

.text
.globl main

main:
    # Imprimir mensagem para digitar o valor de n
    li $v0, 4               # Código do syscall para imprimir string
    la $a0, prompt          # Carrega o endereço da string
    syscall

    # Ler valor de n
    li $v0, 5               # Código do syscall para ler inteiro
    syscall
    move $t0, $v0           # Move o valor lido para $t0 (n)

    # Chamar função Fibonacci
    jal fibonacci
    move $s1, $v0           # Move o resultado do termo de Fibonacci para $s1

    # Imprimir o resultado do termo
    li $v0, 4               # Código do syscall para imprimir string
    la $a0, result          # Carrega o endereço da string
    syscall
    move $a0, $s1           # Move o termo para ser impresso
    li $v0, 1               # Código do syscall para imprimir inteiro
    syscall

    # Calcular a razão áurea
    # Razão áurea é aproximadamente o valor entre o 41º e 30º termos
    li $t0, 41              # Definir n como 41
    jal fibonacci
    move $s2, $v0           # Move o resultado do 41º termo para $s2

    # Calcular a razão áurea
    mtc1 $s2, $f0           # Move o 41º termo para $f0
    mtc1 $s1, $f2           # Move o 30º termo para $f2
    div.s $f12, $f0, $f2    # Divide $f0 por $f2 e armazena em $f12

    # Imprimir a mensagem da razão áurea
    li $v0, 4               # Código do syscall para imprimir string
    la $a0, result2         # Carrega o endereço da string
    syscall
    li $v0, 2               # Código do syscall para imprimir ponto flutuante
    syscall

    # Terminar o programa
    li $v0, 10              # Código do syscall para terminar o programa
    syscall

# Função para calcular Fibonacci
fibonacci:
    # Inicialização
    li $s1, 1               # F1
    li $s2, 1               # F2

    # Verificar se n <= 2
    ble $t0, 2, fib_done    # Se n <= 2, terminar

    # Loop para calcular Fibonacci
    li $t1, 3               # Começa com o terceiro termo
fib_loop:
    add $t2, $s1, $s2       # F(n) = F(n-1) + F(n-2)
    move $s1, $s2           # Atualiza F(n-1)
    move $s2, $t2           # Atualiza F(n-2)
    addi $t1, $t1, 1        # Incrementa contador
    bne $t1, $t0, fib_loop  # Continua o loop se t1 != n

    move $v0, $s2           # Retorna o n-ésimo termo de Fibonacci
    jr $ra                  # Retorna

fib_done:
    move $v0, $s1           # Se n <= 2, retorna 1
    jr $ra                  # Retorna
